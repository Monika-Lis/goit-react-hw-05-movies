{"version":3,"file":"static/js/409.789f0911.chunk.js","mappings":"2OACA,EAA0B,wBAA1B,EAAyD,qBAAzD,EAAsF,sBAAtF,EAAqH,uBAArH,EAAmJ,qBAAnJ,EAAsL,4BAAtL,EAA+N,2BAA/N,EAAqQ,yBAArQ,EAAuS,uB,SCG1RA,EAAY,SAAHC,GAA6B,IAAvBC,EAAKD,EAALC,MAAOC,EAAQF,EAARE,SAajC,OACEC,EAAAA,EAAAA,MAAA,QAAMD,SAba,SAAAE,GACnBA,EAAMC,iBACN,IAAMC,EAAaF,EAAMG,OAAOC,YAAYC,MAC5C,GAA0B,KAAtBH,EAAWI,OAAf,CAIA,IAAMC,EAAWL,EAAWM,MAAM,KAAKC,KAAK,KAC5CX,EAASS,GACTP,EAAMU,cAAcC,OAHpB,MAFEC,IAAAA,OAAAA,QAAwB,wBAM5B,EAGgCC,UAAWC,EAASC,SAAA,EAChDC,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAASC,SAAC,wBAC3BC,EAAAA,EAAAA,KAAA,SACEH,UAAWC,EACXG,KAAK,OACLC,GAAG,cACHC,KAAK,cACLd,MAAOR,EACPuB,YAAY,iBAEdJ,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASJ,UAAWC,EAAWC,SAAC,aAKnD,E,SC1BaM,EAAS,WAAO,IAADC,EAC1BC,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAjCG,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAElBlC,EAAiC,QAA5ByB,EAAGK,EAAaO,IAAI,gBAAQ,IAAAZ,EAAAA,EAAI,IAO3Ca,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAoBvC,EAAO,GACxBwC,MAAK,SAAAzC,GAAkB,IAAf0C,EAAO1C,EAAP0C,QACPL,EAAUK,EACZ,IACCC,OAAM,WACL3B,IAAAA,OAAAA,QAAwB,sBAC1B,GACJ,GAAG,CAACf,IAEJ,IAAM2C,EAAiB,SAAHC,GAAoB,IAAdT,EAAMS,EAANT,OAClBU,GAAgBC,EAAAA,EAAAA,MACtB,OACE3B,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAgBC,SAC7BiB,EAAOY,KAAI,SAAAC,GAAA,IAAG3B,EAAE2B,EAAF3B,GAAI4B,EAAKD,EAALC,MAAOC,EAAWF,EAAXE,YAAW,OACnC/B,EAAAA,EAAAA,KAAA,OAAcH,UAAWC,EAAaC,UACpChB,EAAAA,EAAAA,MAACiD,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAahC,GAAMiC,MAAO,CAAEC,KAAMV,GAAgB3B,SAAA,EACxDC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAWC,UACzBC,EAAAA,EAAAA,KAAA,OACEqC,IAAI,eACJC,IAAG,uCAAAJ,OAAyCH,QAGhD/B,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAeC,SAAE+B,UAT3B5B,EAYJ,KAId,EAEA,OACEnB,EAAAA,EAAAA,MAAA,QAAMc,UAAWC,EAAYC,SAAA,EAC3BC,EAAAA,EAAAA,KAACrB,EAAS,CAACU,MAAOR,EAAOC,SAxCZ,SAAAD,GAEf+B,EAD2B,KAAV/B,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAE/C,IAsCKA,IAASmB,EAAAA,EAAAA,KAACwB,EAAc,CAACR,OAAQA,KAClChB,EAAAA,EAAAA,KAACuC,EAAAA,GAAM,MAGb,C","sources":["webpack://react-homework-template/./src/components/Styles/Movies.module.css?eb12","components/components/SearchBar.jsx","components/Sections/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Movies_section__F9Lk6\",\"form\":\"Movies_form__x0Mn0\",\"input\":\"Movies_input__hdQK-\",\"button\":\"Movies_button__T4qn7\",\"text\":\"Movies_text__fYYxD\",\"searchedDiv\":\"Movies_searchedDiv__xaf71\",\"movieTitle\":\"Movies_movieTitle__IMY9N\",\"movieDiv\":\"Movies_movieDiv__dtUPo\",\"imgDiv\":\"Movies_imgDiv__GjaJW\"};","import Notiflix from 'notiflix';\nimport css from '../Styles/Movies.module.css';\nimport PropTypes from 'prop-types';\n\nexport const SearchBar = ({ query, onSubmit }) => {\n  const handleSubmit = event => {\n    event.preventDefault();\n    const queryWords = event.target.searchInput.value;\n    if (queryWords.trim() === '') {\n      Notiflix.Notify.warning('Please enter a title!');\n      return;\n    }\n    const newQuery = queryWords.split(' ').join('+');\n    onSubmit(newQuery);\n    event.currentTarget.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <span className={css.text}>Search for movies:</span>\n      <input\n        className={css.input}\n        type=\"text\"\n        id=\"searchInput\"\n        name=\"searchInput\"\n        value={query}\n        placeholder=\"Enter title\"\n      ></input>\n      <button type=\"submit\" className={css.button}>\n        Search\n      </button>\n    </form>\n  );\n};\n\nSearchBar.propTypes = {\n  query: PropTypes.string,\n  onSubmit: PropTypes.func,\n};\n","import Notiflix from 'notiflix';\nimport { useState, useEffect } from 'react';\nimport { Outlet, useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { SearchBar } from '../components/SearchBar';\nimport { fetchSearchedMovies } from 'components/API/API';\nimport css from '../Styles/Movies.module.css';\n\nexport const Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n\n  const query = searchParams.get('query') ?? '';\n\n  const onSearch = query => {\n    const newQuery = query !== '' ? { query } : {};\n    setSearchParams(newQuery);\n  };\n\n  useEffect(() => {\n    fetchSearchedMovies(query, 1)\n      .then(({ results }) => {\n        setMovies(results);\n      })\n      .catch(() => {\n        Notiflix.Notify.failure('Error fetching data');\n      });\n  }, [query]);\n\n  const SearchedMovies = ({ movies }) => {\n    const locationMovie = useLocation();\n    return (\n      <div className={css.searchedDiv}>\n        {movies.map(({ id, title, poster_path }) => (\n          <div key={id} className={css.movieDiv}>\n            <Link to={`/movies/${id}`} state={{ from: locationMovie }}>\n              <div className={css.imgDiv}>\n                <img\n                  alt=\"movie poster\"\n                  src={`https://image.tmdb.org/t/p/original/${poster_path}`}\n                />\n              </div>\n              <div>\n                <p className={css.movieTitle}>{title}</p>\n              </div>\n            </Link>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <main className={css.section}>\n      <SearchBar value={query} onSubmit={onSearch} />\n      {query && <SearchedMovies movies={movies} />}\n      <Outlet />\n    </main>\n  );\n};\n"],"names":["SearchBar","_ref","query","onSubmit","_jsxs","event","preventDefault","queryWords","target","searchInput","value","trim","newQuery","split","join","currentTarget","reset","Notiflix","className","css","children","_jsx","type","id","name","placeholder","Movies","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","movies","setMovies","get","useEffect","fetchSearchedMovies","then","results","catch","SearchedMovies","_ref2","locationMovie","useLocation","map","_ref3","title","poster_path","Link","to","concat","state","from","alt","src","Outlet"],"sourceRoot":""}